---
- name: Clean up and reinstall Apache, MySQL, PHP, and PostgreSQL
  hosts: all
  become: yes

  tasks:
    # Apache Cleanup and Installation
    - name: Stop Apache service if running
      ansible.builtin.systemd:
        name: apache2
        state: stopped
        enabled: no

    - name: Remove Apache packages
      ansible.builtin.apt:
        name: apache2
        state: absent

    - name: Remove Apache configuration files
      ansible.builtin.file:
        path: /etc/apache2
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Remove Apache log files
      ansible.builtin.file:
        path: /var/log/apache2
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Remove Apache cache files
      ansible.builtin.file:
        path: /var/cache/apache2
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Install Apache
      ansible.builtin.apt:
        name: apache2
        state: present
        update_cache: yes

    - name: Ensure actions module is enabled
      ansible.builtin.command:
        cmd: a2enmod actions
        creates: /etc/apache2/mods-enabled/actions.load

    - name: Restart Apache to apply changes
      ansible.builtin.systemd:
        name: apache2
        state: restarted

    # MySQL Cleanup and Installation
    - name: Stop MySQL service if running
      ansible.builtin.systemd:
        name: mysql
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Remove MySQL server package
      ansible.builtin.apt:
        name: mysql-server
        state: absent

    - name: Remove MySQL configuration files
      ansible.builtin.file:
        path: /etc/mysql
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Remove MySQL log files
      ansible.builtin.file:
        path: /var/log/mysql
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Install MySQL server
      ansible.builtin.apt:
        name: mysql-server
        state: present
        update_cache: yes

    - name: Start and enable MySQL service
      ansible.builtin.systemd:
        name: mysql
        state: started
        enabled: yes

    # PHP Cleanup and Installation
    - name: Remove PHP and related packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
      loop:
        - php
        - php-mysql
        - libapache2-mod-php
      ignore_errors: yes

    - name: Install PHP and necessary modules
      ansible.builtin.apt:
        name:
          - php
          - php-mysql
          - libapache2-mod-php
        state: present
        update_cache: yes

    # Configure Apache to prioritize index.php
    - name: Ensure index.php is the first in DirectoryIndex
      ansible.builtin.lineinfile:
        path: /etc/apache2/mods-enabled/dir.conf
        regexp: '^(\s*DirectoryIndex\s*).*'
        line: '        DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm'
        backup: yes

    - name: Restart Apache to apply PHP configuration
      ansible.builtin.systemd:
        name: apache2
        state: restarted

    # Create a test PHP file
    - name: Create a test hello.php file
      ansible.builtin.copy:
        dest: /var/www/html/hello.php
        content: "<?php echo 'Hello, World!'; ?>"
    
    # PostgreSQL Cleanup and Installation
    - name: Stop PostgreSQL service if running
      ansible.builtin.systemd:
        name: postgresql
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Remove PostgreSQL server package
      ansible.builtin.apt:
        name: postgresql
        state: absent

    - name: Remove PostgreSQL configuration files
      ansible.builtin.file:
        path: /etc/postgresql
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Remove PostgreSQL log files
      ansible.builtin.file:
        path: /var/log/postgresql
        state: absent
        recurse: yes
      ignore_errors: yes

    - name: Install PostgreSQL server
      ansible.builtin.apt:
        name: postgresql
        state: present
        update_cache: yes

    - name: Start and enable PostgreSQL service
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: yes
